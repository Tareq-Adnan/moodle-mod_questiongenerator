{"version":3,"file":"questiongenerator.min.js","sources":["../src/questiongenerator.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module questiongenerator\n *\n * @module     mod_questiongenerator/questiongenerator\n * @copyright  2024 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax'], function($, Ajax) {\n    return {\n        init: function() {\n            $('#categoryDropdown').on('change', function() {\n                var categoryid = $(this).val();\n                \n                var request = {\n                    methodname: 'mod_questiongenerator_get_generated_questions',\n                    args: {categoryid: categoryid},\n                };\n\n                Ajax.call([request])[0].done(function(response) {\n                    var tableBody = $('#questionTable tbody');\n                    tableBody.empty();\n\n                    response.forEach(function(question) {\n                        console.log(question);\n                        var difficultyButton = '';\n\n                        // Check if the difficulty is empty\n                        if (!question.difficulty) {\n                            difficultyButton = '<button data-question-id=\"' + question.questionid + '\" class=\"btn btn-primary check-difficulty\">Check Difficulty</button>';\n                        }\n                        else{\n                            difficultyButton = question.difficulty.toLowerCase(); // Ensure all lowercase first\n                            difficultyButton = difficultyButton.charAt(0).toUpperCase() + difficultyButton.slice(1);\n                                                    }\n                        var row = '<tr>' +\n                                  '<td>' + question.question + '</td>' +\n                                  '<td>' + question.options + '</td>' +\n                                  '<td>' + question.answer + '</td>' +\n                                  '<td>'+difficultyButton+'</td>' +\n                                  '</tr>';\n                        tableBody.append(row);\n                    });\n                }).fail(function(error) {\n                    console.log('Error fetching questions:', error);\n                });\n            });\n            $(document).on('click', '.check-difficulty', function() {\n                // Get the data-question-id attribute\n                var questionId = $(this).data('question-id');\n                \n                // Find the parent <td> of the clicked button\n                var parentTd = $('button[data-question-id=\"' + questionId + '\"]').closest('td');\n                \n                // Show Bootstrap spinner in the parent <td>\n                var loaderHtml = '<div class=\"spinner-border text-primary\" role=\"status\"><span class=\"sr-only\">Loading...</span></div>';\n                parentTd.html(loaderHtml);  // Replace the button with the spinner\n            \n                var request = {\n                    methodname: 'mod_questiongenerator_check_dificulty_level',\n                    args: { questionid: questionId },\n                };\n            \n                console.log('Request:', request);\n            \n                // Make the AJAX call\n                Ajax.call([request])[0].done(function(response) {\n                    console.log('Response:', response);\n                    \n                    // Replace spinner with the difficulty level text\n                    if (response) {\n                        parentTd.html(response); // Replace spinner with the difficulty text\n                    } else {\n                        parentTd.html('Difficulty not found'); // Fallback if no difficulty is returned\n                    }\n                }).fail(function(error) {\n                    console.log('Error fetching difficulty level:', error);\n                    \n                    // If there's an error, replace the spinner with an error message\n                    parentTd.html('Error fetching difficulty level');\n                });\n            \n                console.log('Question ID:', questionId);\n            });\n            \n            \n        }\n    };\n});\n\n"],"names":["define","$","Ajax","init","on","request","methodname","args","categoryid","this","val","call","done","response","tableBody","empty","forEach","question","console","log","difficultyButton","difficulty","toLowerCase","charAt","toUpperCase","slice","questionid","row","options","answer","append","fail","error","document","questionId","data","parentTd","closest","html"],"mappings":";;;;;;;AAsBAA,iDAAO,CAAC,SAAU,cAAc,SAASC,EAAGC,YACjC,CACHC,KAAM,WACFF,EAAE,qBAAqBG,GAAG,UAAU,eAG5BC,QAAU,CACVC,WAAY,gDACZC,KAAM,CAACC,WAJMP,EAAEQ,MAAMC,QAOzBR,KAAKS,KAAK,CAACN,UAAU,GAAGO,MAAK,SAASC,cAC9BC,UAAYb,EAAE,wBAClBa,UAAUC,QAEVF,SAASG,SAAQ,SAASC,UACtBC,QAAQC,IAAIF,cACRG,iBAAmB,GAQnBA,iBALCH,SAASI,YAIVD,iBAAmBH,SAASI,WAAWC,eACHC,OAAO,GAAGC,cAAgBJ,iBAAiBK,MAAM,GAJlE,6BAA+BR,SAASS,WAAa,2EAMxEC,IAAM,WACSV,SAASA,SADlB,YAESA,SAASW,QAFlB,YAGSX,SAASY,OAHlB,YAIOT,iBAJP,aAMVN,UAAUgB,OAAOH,WAEtBI,MAAK,SAASC,OACbd,QAAQC,IAAI,4BAA6Ba,aAGjD/B,EAAEgC,UAAU7B,GAAG,QAAS,qBAAqB,eAErC8B,WAAajC,EAAEQ,MAAM0B,KAAK,eAG1BC,SAAWnC,EAAE,4BAA8BiC,WAAa,MAAMG,QAAQ,MAI1ED,SAASE,KADQ,4GAGbjC,QAAU,CACVC,WAAY,8CACZC,KAAM,CAAEmB,WAAYQ,aAGxBhB,QAAQC,IAAI,WAAYd,SAGxBH,KAAKS,KAAK,CAACN,UAAU,GAAGO,MAAK,SAASC,UAClCK,QAAQC,IAAI,YAAaN,UAGrBA,SACAuB,SAASE,KAAKzB,UAEduB,SAASE,KAAK,2BAEnBP,MAAK,SAASC,OACbd,QAAQC,IAAI,mCAAoCa,OAGhDI,SAASE,KAAK,sCAGlBpB,QAAQC,IAAI,eAAgBe"}